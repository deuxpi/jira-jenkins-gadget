<?xml version="1.0" encoding="UTF-8"?>
<Module>
    <ModulePrefs
            title="Build Status (multiple projects)"
            author="Vlastimil Eliáš"
            author_email="velias@redhat.com"
            description="This gadget allows to show status of multiple projects from Jenkins/Hudson server."
            screenshot="__ATLASSIAN_BASE_URL__/download/resources/org.jboss.jira.plugin.multi-build-gadgets/thumbnails/screenshot.png"
            thumbnail="__ATLASSIAN_BASE_URL__/download/resources/org.jboss.jira.plugin.multi-build-gadgets/thumbnails/thumbnail.png">
        <Require feature="views" />
        <Require feature="dynamic-height" />
        <Require feature="settitle" />
        <Require feature="setprefs" />
        <Optional feature="gadget-directory">
            <Param name="categories">Other</Param>
        </Optional>
    </ModulePrefs>
    <UserPref name="jenkins_view_name" display_name="Jenkins/Hudson View name (leave empty for All)" datatype="string" required="false" />
    <UserPref name="jenkins_url" display_name="Jenkins/Hudson server URL (default hudson.jboss.org)" datatype="string" default_value="http://hudson.jboss.org/hudson" />
    <Content type="html"><![CDATA[<style type="text/css">

  #wrapper {
    margin: 5px 10px 0px 10px;
  }

  .jobtitleInner {
    margin: 0px 0px 10px 0px;
    text-align: center;
    padding: 8px 35px 8px 14px;
    text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
    background-color: #FFFFFF;
    border: 1px solid #FFFFFF;
    -webkit-border-radius: 4px;
    -moz-border-radius: 4px;
    border-radius: 4px;
  }

  .jobtitleInner a {
    color: #000000;
    text-decoration: none;
  }
  
  .jobtitleInner a:hover {
    text-decoration: underline;
  }
    
  .statusblue, .statusblue a {
    color: #339933;
    background-color: #E4F5E3;
    border-color: #B4E2B4;
  }
  
  .statusred, .statusred a {
    color: #D62829;
    background-color: #FFE6E7;
    border-color: #EEC0C0;
  }

  .statusyellow, .statusyellow a {
    color: #C09853;
    background-color: #FCF8E3;
    border-color: #FBEED5;
  }
    
  #jobs {
    width: 100%;
  }

  .job {
    width: 100%;
    margin-bottom: 5px;
  }

  .jobdetails {
    display: table;
    font-size: 12px;
    width: 100%;
  }
  
  .jobdetails div {
    float: left;
    width: 33%;
    border: 0px;
    padding: 0px;
    margin: 0px;
    font-size: 12px;
  }
  
  .jobdetails a {
    color: #003366;
    text-decoration: none;
  }
  
  .jobdetails a:hover {
    text-decoration: underline;
  }
  
  .clear { clear: both;}
</style>
  
<div id='wrapper'>
    <div id='jobs' width='100%'>Loading build status...</div>
</div>

<script type='text/javascript'>
  var prefs = new gadgets.Prefs();

  function init() {
    gadgets.window.setTitle("Build Status - " + getViewName());
    gadgets.window.adjustHeight();
    makeJSONRequest(getViewURL(), viewResponse);
  }
  
  function makeJSONRequest(rooturl, response) {
    var params = {};
    params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
    var ts = new Date().getTime();
    var url = rooturl + "/api/json?nocache="+Math.floor(ts / 10000);
    gadgets.io.makeRequest(url, response, params);
  };
  
  function viewResponse(obj) {
    if (obj.data) {
      var jsondata = obj.data;
      document.getElementById('jobs').innerHTML = "";
      for (var i = 0; i < jsondata.jobs.length; i++) {
        var job = jsondata.jobs[i];
        makeJSONRequest(job.url, jobResponse);
      }
    } else if (obj.errors && obj.errors.length > 0) {
      document.getElementById('jobs').innerHTML = "View loading error: " + obj.errors + "<br/>Response content: " + obj.text;
    } else {
      document.getElementById('jobs').innerHTML = "View loading error.<br/>Response content: " + obj.text;
    }
  }

  function jobResponse(obj) {
    if (obj.data) {
      var jsondata = obj.data;
      var job = document.createElement('div');
      job.className = "job";
      var html = "<div width='100%' class='jobtitleInner status"+jsondata.color+"'>"+getJobTitleHTML(jsondata.url, jsondata.name)+"</div>";
      html = html + "<div class='jobdetails' width='100%'>";
      for (var i in jsondata.healthReport){
          html = html + jsondata.healthReport[i].description + "<br/>"; 
      }
      html = html + "<div>Last build: " + getBuildHTML(jsondata.lastBuild) + "</div>";
      html = html + "<div align='center'>Last successful build: " + getBuildHTML(jsondata.lastSuccessfulBuild) + "</div>";
      html = html + "<div align='right'>Last stable build: " + getBuildHTML(jsondata.lastStableBuild) + "</div>";
      html = html + "</div>";
      job.innerHTML = html;
      var jobList = document.getElementById('jobs');
      jobList.appendChild(job);
    } else if (obj.errors && obj.errors.length > 0) {
      document.getElementById('jobs').innerHTML = "Build status loading error: " + obj.errors + "<br/>Response content: " + obj.text;
    } else {
      document.getElementById('jobs').innerHTML = "Build status loading error.<br/>Response content: " + obj.text;
    }
    gadgets.window.adjustHeight();
  };
   
  function getViewURL(){
    var surl = prefs.getString("jenkins_url");
    if (surl && surl.length > 0 ){
      if (surl.charAt(surl.length - 1) != "/")
        surl = surl + "/";
    } else {
      surl = "http://hudson.jboss.org/hudson/";
    }
    var viewname = prefs.getString("jenkins_view_name");
    if (viewname && viewname.length > 0)
      return surl + "view/" + encodeURIComponent(prefs.getString("jenkins_view_name"));
    else
      return surl;
  }
   
  function getViewName() {
    var viewname = prefs.getString("jenkins_view_name");
    if (!viewname || viewname.length === 0)
      viewname = "All";
    return viewname;
  }

  function getJobTitleHTML(joburl, jobname) {
    return "<strong><a href='" + joburl + "' target='_blank'>" + jobname + "</a></strong>";
  }
   
  function getBuildHTML(build){
     if (build)
       return "<a href='" + build.url + "' target='_blank'>" + build.number + "</a>";
     else
       return "--";  
  }
  
  gadgets.util.registerOnLoadHandler(init);

</script>]]></Content>
</Module>
